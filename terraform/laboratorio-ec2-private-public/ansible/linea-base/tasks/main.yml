---
- name: Configurar nombre de host
  ansible.builtin.hostname:
    name: "{{ ansible_hostname }}"

- name: Crear grupo en el host remoto
  ansible.builtin.group:
    name: "{{ item.group }}"
    state: present
  loop: "{{ user }}"

- name: Crear usuarios en el host remoto
  ansible.builtin.user:
    name: "{{ item.name }}"
    group: "{{ 'admin' if item.admin == true else 'operator' }}"
    comment: "{{ item.comment }}"
    create_home: true
    home: /home/{{ item.name }}
    groups: users
    update_password: on_create
  loop: "{{ user }}"

- name: Configurar llaves privadas
  ansible.posix.authorized_key:
    user: "{{ item.split('/')[-1].split('.')[0] }}"
    key: "{{ lookup('file', item) }}"
  with_fileglob:
    - files/*.pub
  loop_control:
    label: "{{ item.split('/')[-1].split('.')[0] }}"

- name: Asegurarse de que exista /etc/sudoers.d
  ansible.builtin.file:
    state: directory
    path: /etc/sudoers.d
    mode: "0755"
    owner: root
    group: root

- name: Configurar sudo para los usuarios administradores
  ansible.builtin.template:
    src: sudoadmin
    dest: /etc/sudoers.d/{{ item.name }}
    mode: "0640"
    validate: "/usr/sbin/visudo -cf %s"
    backup: true
  loop: "{{ user }}"
  loop_control:
    label: "{{ item.name }} - {{ item.comment }}"
  when: item.admin

- name: Configurar zona horaria a America/Lima
  community.general.timezone:
    name: America/Lima

- name: Denegar el root en el servidor de monitoreo
  ansible.builtin.replace:
    path: /etc/ssh/sshd_config
    regexp: "^#?(PermitRootLogin).*"
    replace: '\1 {{ "no" if ansible_hostname == "monitoreo" else "yes" }}'

- name: Activar servicio firewalld
  ansible.builtin.service:
    name: firewalld
    state: started

- name: Enable zone
  ansible.posix.firewalld:
    zone: "{{ item }}"
    state: present
    permanent: true
  loop:
    - oym
    - servicio
    - backup
  notify: reload_firewalld

- name: Create target to firewalld zone
  ansible.posix.firewalld:
    zone: "{{ item }}"
    state: present
    permanent: true
    target: DROP
  loop:
    - oym
    - servicio
    - backup

- name: "Set default FirewallD zone: internal"
  ansible.builtin.command:
    cmd: firewall-cmd --set-default-zone="oym"
  changed_when: false

- name: Remove interface zone from public
  ansible.builtin.command:
    cmd: firewall-cmd --zone="public" --remove-interface="eth1"
  changed_when: false

- name: Remove interface zone from public
  ansible.builtin.command:
    cmd: firewall-cmd --zone="oym" --remove-interface="eth2"
  changed_when: false

- name: Set default zone for interface
  ansible.builtin.command:
    cmd: firewall-cmd --zone="{{ item.zone }}" --add-interface="{{ item.interface }}"
  loop:
    - { zone: "oym", interface: "eth0" }
    - { zone: "servicio", interface: "eth1" }
    - { zone: "backup", interface: "eth2" }
  changed_when: false

- name: Permitir redes de acceso
  ansible.posix.firewalld:
    zone: "{{ item.zone }}"
    port: "{{ item.port }}"
    permanent: true
    state: enabled
  loop:
    - { zone: "oym", port: "22/tcp" }
    - { zone: "servicio", port: "22/tcp" }
    - { zone: "backup", port: "5094/tcp" }
  notify: reload_firewalld

- name: Instalar Chrony
  ansible.builtin.package:
    name: chrony
    state: present

- name: Configurar el servidor NTP
  ansible.builtin.template:
    src: templates/chrony.conf.j2
    dest: /etc/chrony/chrony.conf
    mode: "0644"
  notify: Restart_Chrony

- name: Block de bastion
  when: ansible_hostname == "bastion"
  block:
    - name: Crear escritorio scripts en servidor remoto
      ansible.builtin.file:
        path: /scripts
        mode: "0755"
        owner: administrator
        group: administrator

    - name: Copia script de backup a servidor remoto
      ansible.builtin.template:
        src: backup.sh
        dest: /scripts/backup.sh
        mode: "0755"
        owner: root
        group: root

    - name: Configurar cron para la ejecuci칩n del backup
      ansible.builtin.cron:
        name: "backup remoto"
        minute: 0
        hour: 0
        job: /scripts/./backup.sh

- name: Block de monitoreo
  when: ansible_hostname == "monitoreo"
  block:
    - name: Configurar puerto para backup 5040
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        insertafter: '^#?Port\s+22$'
        line: "Port 5040"
        state: present

    - name: Permitir sshd escuche en el port 5040/tcp
      community.general.seport:
        ports: 5040
        proto: tcp
        setype: ssh_port_t
        state: present

    - name: A침adir puertos minimos de administraci칩n
      ansible.posix.firewalld:
        zone: backup
        port: 5040
        state: enabled
        permanent: true
        immediate: true

    - name: Instalar docker en servidor de monitoreo
      ansible.builtin.yum_repository:
        name: docker-ce
        description: Docker Yum Repo
        baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable
        gpgcheck: false
        enabled: true

    - name: Actualizar package cache
      changed_when: false
      ansible.builtin.package:
        update_cache: true

    - name: Instalar docker
      ansible.builtin.yum:
        name: "{{ item }}"
        state: present
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Activar servicio de docker
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

    - name: A침adir usuario administrator al grupo docker
      ansible.builtin.user:
        name: administrator
        groups: docker
        append: true

    - name: Instalar Docker-Compose en servidor remoto
      ansible.builtin.get_url:
        url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: "0755"

    - name: Copiar docker-compose yaml
      ansible.builtin.template:
        src: docker-compose.j2
        dest: /scripts/docker-compose.yml
        mode: "0755"
        owner: administrator
        group: administrator
