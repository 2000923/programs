     1	---
     2	######################################
     3	# Install programs for all users in your operative system, this is with root user
     4	#
     5	#
     6	- name: Run the equivalent of "apt-get update"
     7	  ansible.builtin.apt:
     8	    update_cache: true
     9	
    10	- name: Pause for 2 minutes to build app cache
    11	  ansible.builtin.pause:
    12	    minutes: 2
    13	
    14	- name: Install packages extras
    15	  ansible.builtin.apt:
    16	    name: "{{ item }}"
    17	    state: present
    18	  loop:
    19	    - "{{ base_packages }}"
    20	    - "{{ packages }}"
    21	
    22	- name: Download packages to tmp directory
    23	  ansible.builtin.include_tasks:
    24	    file: get_temp_url.yml
    25	
    26	- name: Install deb packages
    27	  ansible.builtin.apt:
    28	    deb: "{{ item.package }}"
    29	    state: present
    30	  loop: "{{ url_deb }}"
    31	
    32	- name: Install binary script aws
    33	  ansible.builtin.command: ./aws/install
    34	  register: aws_install
    35	  changed_when: aws_install.rc != 0
    36	  args:
    37	    chdir: /tmp/
    38	    executable: /bin/bash
    39	  ignore_errors: true
    40	
    41	- name: Install discord new version
    42	  ansible.builtin.apt:
    43	    deb: /tmp/discord.deb
    44	    state: present
    45	
    46	- name: Install drawio new
    47	  ansible.builtin.apt:
    48	    deb: /tmp/drawio.deb
    49	    state: present
    50	
    51	- name: Install packages from snap
    52	  community.general.snap:
    53	    name: "{{ item }}"
    54	    state: present
    55	    classic: true
    56	  loop: "{{ snap_packages }}"
    57	
    58	- name: Install the inkdrop deb in the pc
    59	  ansible.builtin.apt:
    60	    deb: /tmp/inkdrop.deb
    61	
    62	- name: Run install script for fzf
    63	  ansible.builtin.shell:
    64	    cmd: |
    65	      set -o pipefail
    66	      echo 'y' | /opt/fzf/./install
    67	  register: fzf_download
    68	  changed_when: fzf_download.rc != 0
    69	  args:
    70	    executable: /bin/bash
    71	
    72	# %%%%%%%%%%%%%%%%%%%%%%%%%%% Install clipgrab %%%%%%%%%%%%%%%%%%%%%%%%%
    73	
    74	- name: Compile Clipgrab
    75	  ansible.builtin.command:
    76	    cmd: qmake clipgrab.pro
    77	  register: cg_pro_compile
    78	  changed_when: cg_pro_compile.rc != 0
    79	  args:
    80	    chdir: /opt/clipgrab
    81	
    82	- name: Make the object clipgrab
    83	  when: cg_pro_compile.rc == 0
    84	  ansible.builtin.command:
    85	    cmd: make
    86	  register: make_clipgrab
    87	  changed_when: make_clipgrab.rc != 0
    88	  args:
    89	    chdir: /opt/clipgrab
    90	
    91	- name: Link to clipgrab for /usr/local/bin
    92	  ansible.builtin.file:
    93	    src: /opt/clipgrab/clipgrab
    94	    dest: /usr/local/bin/clipgrab
    95	    owner: root
    96	    group: root
    97	    mode: "0755"
    98	    state: link
    99	
   100	- name: Install plugins for nvim with sudo
   101	  community.general.npm:
   102	    name: "{{ item }}"
   103	    global: true
   104	  loop: "{{ npm_packages_sudo }}"
   105	
   106	- name: Install packages complements for nvim
   107	  ansible.builtin.pip:
   108	    name: "{{ item }}"
   109	    executable: pip3
   110	  loop: "{{ pip_packages }}"
   111	
   112	- name: Configure cpan into OS
   113	  ansible.builtin.shell:
   114	    cmd: |
   115	      set -o pipefail
   116	      cpanm -n install Neovim::ext
   117	      echo yes | sudo cpan App::cpanminus
   118	  register: cpan_neovim
   119	  changed_when: cpan_neovim.rc != 0
   120	  args:
   121	    executable: /usr/bin/fish
   122	
   123	- name: Install extension pack from local
   124	  ansible.builtin.shell:
   125	    cmd: |
   126	      set -o pipefail
   127	      echo y | VBoxManage extpack install /tmp/Oracle_VM_VirtualBox_Extension_Pack-{{ extension_vb.stdout }}.vbox-extpack
   128	  register: vbox_extension
   129	  changed_when: vbox_extension.rc != 0
   130	  args:
   131	    executable: /bin/bash
   132	
   133	- name: Configure GNS3 server
   134	  ansible.builtin.shell: |
   135	    set -o pipefail
   136	    usermod -aG kvm "{{ os_users }}"
   137	    usermod -aG libvirt "{{ os_users }}"
   138	  register: gns3_group
   139	  changed_when: gns3_group.rc != 0
   140	  become: true
   141	  args:
   142	    executable: /bin/bash
